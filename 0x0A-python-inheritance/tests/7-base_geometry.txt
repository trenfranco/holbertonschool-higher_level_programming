>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests:

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
ValueError: distance must be greater than 0

>>> bg.integer_validator("", 4)

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("name", [1, 2])
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", False)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", (1, 2))
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator(None, None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> bg.integer_validator("None", None)
Traceback (most recent call last):
TypeError: None must be an integer

>>> bg.integer_validator("name", {"a": "jaja", "b": "jaje"})
Traceback (most recent call last):
TypeError: name must be an integer
